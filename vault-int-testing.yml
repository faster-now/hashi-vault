---

- hosts: all
  vars:
    token: needs-supplied-at-runtime
    docker_network: vault_net
    user: azureuser
    vault_url: http://127.0.0.1:8200
    vault_servers: #use dict so a port number can be specified for each vault server to facilitate running multiple containers on a single host
      vault-a: 8200
      vault-b: 8800
    vault_containers: #use to create and start containers on limited resource host (free tier on cloud providers cant cope with 5 containers)
      vault-a: 8200
  gather_facts: no
  remote_user: "{{user}}"
  become: no
  tasks:

    - name: Test vault read health
      community.hashi_vault.vault_read:
        url: "{{ vault_url }}"
        path: sys/health
        # auth_method: userpass
        # username: user
        # password: '{{ passwd }}'
        token: "{{ token }}"
        token_validate: false
      register: health

    - name: Display the health data
      ansible.builtin.debug:
        msg: "{{ health }}"

    - name: Check if Root CA needs created
      community.hashi_vault.vault_read:
        url: "{{ vault_url }}"
        path: sys/mounts
        token: "{{ token }}"
        token_validate: false
      register: mount_list_result

    - name: Display the root data
      ansible.builtin.debug:
        msg: "{{ mount_list_result }}"

    - set_fact:
        jsonasstring: "{{ mount_list_result | string }}"

    - set_fact:
        ishere: true
      when:
        - "'pki/' in jsonasstring"

    - name: Display the root data
      ansible.builtin.debug:
        #msg: "{{ mount_list_result.data.data['pkit/'] }}" #| selectattr('domain', 'equalto', server_domain)}}"
        #msg: "'pkit' in mount_list_result" #| selectattr('domain', 'equalto', server_domain)}}"
        msg: "result: {{ ishere }}"

    - name: Create Root CA for issuing consul and vault TLS certs
      community.hashi_vault.vault_write:
        url: "{{ vault_url }}"
        path: sys/mounts/pki
        data:
          type: pki
        token: "{{ token }}"
        token_validate: false
      when:
        - not mount_list_result.data.data['pkit/'] is defined

    # - name: Configure the Root CA
    #   community.hashi_vault.vault_write:
    #     url: "{{ vault_url }}"
    #     path: sys/mounts/pki/tune
    #     data:
    #       max_lease_ttl: 87600h
    #     token: "{{ token }}"
    #     token_validate: false

