---
-name: Enable consul encryption
- hosts: all
  vars:
    user: azureuser
    consul_servers:
      - consul-a
      - consul-b
      - consul-c
    regenerate: false #generate a new consul enc key where one already exists

    consul_image_name: my-consul
    docker_network: vault_net

gather_facts: no

pre_tasks:


tasks:

  - name: Check if consul encryption key is already defined
    lineinfile:
      state: absent
      path: "~/consul/{{ consul_servers[0] }}.hcl" #files are all managed together so only check the first and use the result for all
      regexp: "^encrypt\s*=\s*"
    check_mode: true
    changed_when: false # This just makes things look prettier in the logs
    register: key_needs_created

  - name: Generate a new consul encryption key
    community.docker.docker_container_exec:
      container: {{ consul_servers[0] }}
      command: -t "consul keygen"
    register: consul_enc_key
    when:
      - key_needs_created.found or regenerate

  - name: Add new encryption key to config
    lineinfile:
      path: "~/consul/{{ item }}.hcl" #Add to all config files
      regexp: "^encrypt\s*=\s*"
      line: "encrypt = \"{{ consul_enc_key }}\" #generated by Ansible"
    notify: Restart Consul #even though in a loop, will only result in one restart
    when:
      - consul_enc_key is defined
    loop: "{{consul_servers}}"

handlers:
  - name: Restart Consul
      docker_container:
        name: "{{ item }}"
        image: "{{consul_image_name}}:v1"
        state: started
        restart_policy: unless-stopped
        restart: yes
        networks:
          - name: "{{ docker_network }}"
        volumes:
          - "~/consul/{{item}}.hcl:/etc/consul/consul.hcl"
          - "~/consul-storage/{{item}}/:/opt/consul-storage"
      loop: "{{consul_servers}}"
