---
- hosts: all
  vars:
    docker_network: vault_net
    user: azureuser
    vault_servers: #use dict so a port number can be specified for each vault server to facilitate running multiple containers on a single host
      vault-a: 8200
      vault-b: 8800
    vault_image_name: my-vault
    #temp_build_dir: /tmp/build/vault
    base_vault_dir: ~/vault
    vault_container_audit_dir: /opt/vault
  gather_facts: no
  remote_user: "{{user}}"
  become: no
  tasks:
    # - name: Check if the temp build directory exists
    #   ansible.builtin.stat:
    #     path: "{{ temp_build_dir }}"
    #   register: dir_to_check

    # - block: #Only perform this block where the vault build dir actually exists
    #   - name: Copy vault & consul client config files from temp build dir to persistant storage location (ready for Docker volume)
    #     copy:
    #       src: "{{ item.key }}"
    #       dest: ~/vault/config/ #trailing / means directory will be created where doesnt already exist
    #     with_fileglob:
    #       - "{{ temp_build_dir }}/*.hcl"
    #   - name: Delete temp build vault & consul config files
    #     file:
    #       state: absent
    #       path: "{{ item.key }}"
    #     with_fileglob:
    #       - "{{ temp_build_dir }}/*.hcl"

    #   - name: Copy vault build files to build dir
    #     copy:
    #       src: "{{ item.key }}"
    #       dest: ~/vault-build/ #trailing / means directory will be created where doesnt already exist
    #     with_fileglob:
    #       - "{{ temp_build_dir }}/*"
    #   - name: Delete temp build vault directory
    #     file:
    #       state: absent
    #       path: "{{ temp_build_dir }}/"
    #   when: dir_to_check.stat.isdir is defined and dir_to_check.stat.isdir

    - name: Create local persistent storage directory for Vault servers (in preparation for Docker volume)
      file:
        path: "{{ base_vault_dir }}/{{ item.key }}/consul-storage"
        state: directory
        owner: "{{user}}"
        group: "{{user}}"
        mode: 0775
      with_dict: "{{ vault_servers }}"  

    - name: Create persistent storage directory for Vault audit logs (ready for Docker volume)
      file:
        path: "{{ base_vault_dir }}/{{ item.key }}/audit-logs"
        state: directory
        owner: "{{user}}"
        group: "{{user}}"
        mode: 0777
      with_dict: "{{ vault_servers }}"

    # - name: Create persistent storage directory for Vault config (ready for Docker volume)
    #   file:
    #     path: "~/vault/config/{{item}}"
    #     state: directory
    #     owner: "{{user}}"
    #     group: "{{user}}"
    #     mode: 0775
    #   loop: "{{vault_servers}}"

    - name: Build a Vault image
      docker_image:
        build:
          path: ~/vault-build #Dockerfile for Vault build should be in user dir/vault-build subfolder
        name: "{{vault_image_name}}"
        tag: v1
        force_source: yes
        #push: yes
        source: build
      #delegate_to: 127.0.0.1
      #become: no

    #Docker network should already exist from Consul server layer provisioning prior to this but will be created here if not already
    - name: Create a docker network
      docker_network:
        name: "{{ docker_network }}"
    
    # - name: Now create a Vault Docker Container from the image
    #   docker_container:
    #     name: "{{ item.key }}"
    #     image: "{{vault_image_name}}:v1"
    #     state: started
    #     restart_policy: unless-stopped
    #     capabilities:
    #       - IPC_LOCK
    #     memory: 400m
    #     memory_swap: 2g
    #     networks:
    #       - name: "{{ docker_network }}"
    #     ports: #TODO needs updated to account for load balancer and potentially different port number exposed for each docker container
    #       - "{{ item.value }}:{{ item.value }}"
    # #      - "443:8200"
    # #      - "7300:7300"
    # #      - "7301:7301"
    #     volumes:
    #       - "~/vault/config/{{item.key}}-consul.hcl:/etc/consul/consul.hcl"
    #       - "~/vault/config/{{item.key}}.hcl:/etc/vault/vault.hcl"
    #       - "{{ base_vault_dir }}/{{ item.key }}/consul-storage/:/opt/consul-storage"
    #       - "{{ base_vault_dir }}/{{ item.key }}/audit-logs/:/opt/vault"
    #       # - /opt/test-static/nginx/ssl/:/etc/nginx/ssl
    #       # - /opt/test-static/public/:/opt/test-static/public
    #   with_dict: "{{ vault_servers }}"

    - name: Create vault docker containers
      include_role:
        name: vault-container-restart
      vars:
        container_name: "{{ item.key }}"
        vault_image_version: "v1"
        host_port: "{{ item.value }}"
        container_port: "{{ item.value }}"
        vault_config_consul_file: "{{ base_vault_dir }}/{{ item.key }}/config/{{ item.key }}-consul.hcl"
        vault_config_file: "{{ base_vault_dir }}/{{ item.key }}/config/{{ item.key }}.hcl"
        consul_storage_dir: "{{ base_vault_dir }}/{{ item.key }}/consul-storage"
        vault_host_audit_dir: "{{ base_vault_dir }}/{{ item.key }}/audit-logs"
        container_restart: yes
      with_dict: "{{ vault_servers }}"  
      #loop: "{{ consul_servers }}"
      #loop_control:
      #  loop_var: consul_server

    - name: Create vault docker containers
      include_role:
        name: vault-container-restart